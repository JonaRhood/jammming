{"ast":null,"code":"var _jsxFileName = \"/Users/jonathan/Desktop/Codecademy/jammming/src/components/Authentication.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext, useEffect, createContext } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthenticationContext = /*#__PURE__*/createContext();\nfunction Authentication({\n  children\n}) {\n  _s();\n  const [authentication, setAuthentication] = useState(null);\n  const [accessToken, setAccessToken] = useState();\n  const clientId = \"6a18aead68cc40328197f823c5b3fb55\"; // Replace with your client ID\n  const params = new URLSearchParams(window.location.search);\n  const code = params.get(\"code\");\n  useEffect(() => {\n    const AuthenticationProcess = async () => {\n      if (!code) {\n        redirectToAuthCodeFlow(clientId);\n      } else {\n        console.log(\"Authentication Done\");\n      }\n      async function redirectToAuthCodeFlow(clientId) {\n        const verifier = generateCodeVerifier(128);\n        const challenge = await generateCodeChallenge(verifier);\n        localStorage.setItem(\"verifier\", verifier);\n        const params = new URLSearchParams();\n        params.append(\"client_id\", clientId);\n        params.append(\"response_type\", \"code\");\n        params.append(\"redirect_uri\", \"http://localhost:3000/\");\n        params.append(\"scope\", \"user-read-private user-read-email playlist-modify-public playlist-modify\");\n        params.append(\"code_challenge_method\", \"S256\");\n        params.append(\"code_challenge\", challenge);\n        document.location = `https://accounts.spotify.com/authorize?${params.toString()}`;\n      }\n      function generateCodeVerifier(length) {\n        let text = '';\n        let possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n        for (let i = 0; i < length; i++) {\n          text += possible.charAt(Math.floor(Math.random() * possible.length));\n        }\n        return text;\n      }\n      async function generateCodeChallenge(codeVerifier) {\n        const data = new TextEncoder().encode(codeVerifier);\n        const digest = await window.crypto.subtle.digest('SHA-256', data);\n        return btoa(String.fromCharCode.apply(null, [...new Uint8Array(digest)])).replace(/\\+/g, '-').replace(/\\//g, '_').replace(/=+$/, '');\n      }\n    };\n    AuthenticationProcess();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(AuthenticationContext.Provider, {\n    value: {\n      clientId,\n      params,\n      code\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n}\n_s(Authentication, \"EpfL+QbG2Ct1THItgluou3EZPlI=\");\n_c = Authentication;\n;\nexport default Authentication;\nvar _c;\n$RefreshReg$(_c, \"Authentication\");","map":{"version":3,"names":["React","useState","useContext","useEffect","createContext","jsxDEV","_jsxDEV","AuthenticationContext","Authentication","children","_s","authentication","setAuthentication","accessToken","setAccessToken","clientId","params","URLSearchParams","window","location","search","code","get","AuthenticationProcess","redirectToAuthCodeFlow","console","log","verifier","generateCodeVerifier","challenge","generateCodeChallenge","localStorage","setItem","append","document","toString","length","text","possible","i","charAt","Math","floor","random","codeVerifier","data","TextEncoder","encode","digest","crypto","subtle","btoa","String","fromCharCode","apply","Uint8Array","replace","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/jonathan/Desktop/Codecademy/jammming/src/components/Authentication.js"],"sourcesContent":["import React, { useState, useContext, useEffect, createContext } from \"react\";\n\nexport const AuthenticationContext = createContext();\n\nfunction Authentication({ children }) {\n\n    const [authentication, setAuthentication] = useState(null);\n    const [accessToken, setAccessToken] = useState();\n\n    const clientId = \"6a18aead68cc40328197f823c5b3fb55\"; // Replace with your client ID\n    const params = new URLSearchParams(window.location.search);\n    const code = params.get(\"code\");\n\n\n    useEffect(() => {\n\n        const AuthenticationProcess = async () => {\n\n            if (!code) {\n                redirectToAuthCodeFlow(clientId);\n            } else {\n                console.log(\"Authentication Done\");\n            }\n\n            async function redirectToAuthCodeFlow(clientId) {\n                const verifier = generateCodeVerifier(128);\n                const challenge = await generateCodeChallenge(verifier);\n\n                localStorage.setItem(\"verifier\", verifier);\n\n                const params = new URLSearchParams();\n                params.append(\"client_id\", clientId);\n                params.append(\"response_type\", \"code\");\n                params.append(\"redirect_uri\", \"http://localhost:3000/\");\n                params.append(\"scope\", \"user-read-private user-read-email playlist-modify-public playlist-modify\");\n                params.append(\"code_challenge_method\", \"S256\");\n                params.append(\"code_challenge\", challenge);\n\n                document.location = `https://accounts.spotify.com/authorize?${params.toString()}`;\n            }\n\n            function generateCodeVerifier(length) {\n                let text = '';\n                let possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n\n                for (let i = 0; i < length; i++) {\n                    text += possible.charAt(Math.floor(Math.random() * possible.length));\n                }\n                return text;\n            }\n\n            async function generateCodeChallenge(codeVerifier) {\n                const data = new TextEncoder().encode(codeVerifier);\n                const digest = await window.crypto.subtle.digest('SHA-256', data);\n                return btoa(String.fromCharCode.apply(null, [...new Uint8Array(digest)]))\n                    .replace(/\\+/g, '-')\n                    .replace(/\\//g, '_')\n                    .replace(/=+$/, '');\n            }\n\n        }\n        AuthenticationProcess()\n\n    }, []);\n\n    return (\n        <AuthenticationContext.Provider value={{ clientId, params, code }}>\n            {children}\n        </AuthenticationContext.Provider>\n    )\n};\n\nexport default Authentication;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}