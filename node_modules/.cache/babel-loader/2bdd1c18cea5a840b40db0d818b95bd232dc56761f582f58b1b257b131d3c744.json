{"ast":null,"code":"var _jsxFileName = \"/Users/jonathan/Desktop/Codecademy/jammming/src/components/SearchBar.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useState, useEffect } from \"react\";\nimport styles from \"../modules/SearchBar.module.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSearch } from \"@fortawesome/free-solid-svg-icons\";\nimport { ReactComponent as ArrowLogo } from \"../resources/img/ArrowUDownLeft.svg\";\nimport { TokenContext } from \"./TokenProvider\";\nimport SearchResults from \"./SearchResults\";\nimport { useNightMode } from \"../App\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SearchBar({\n  mozilla\n}) {\n  _s();\n  const {\n    Night\n  } = useNightMode();\n  const {\n    accessToken,\n    loading\n  } = useContext(TokenContext);\n  const [textTyped, setTextTyped] = useState(\"\");\n  const [dataSpotify, setDataSpotify] = useState(\"\");\n  const [searchBarMozilla, setSearchBarMozilla] = useState(mozilla);\n  useEffect(() => {\n    setSearchBarMozilla(mozilla);\n  }, [mozilla]);\n  const handleTextTyping = event => {\n    event.preventDefault();\n    setTextTyped(event.target.value);\n  };\n  async function handleSubmit(event) {\n    if (!textTyped.trim()) {\n      return;\n    }\n    if (event.key === \"Enter\" || event.type === \"click\") {\n      const endpoint = \"https://api.spotify.com/v1/search?\";\n      const q = \"q=remaster%2520artist%3A\" + textTyped;\n      const type = \"&type=album,track,artist\";\n      const market = \"&market=ES\";\n      const limit = \"&limit=50\";\n      const url = endpoint + q + type + market + limit;\n      const token = accessToken;\n      try {\n        const response = await fetch(url, {\n          method: \"GET\",\n          headers: {\n            \"Authorization\": `Bearer ${token}`\n          }\n        });\n        if (!response.ok) {\n          throw new Error(\"HTTP error! status: ${response.status}\");\n        }\n        const data = await response.json();\n        setDataSpotify(data);\n      } catch (error) {\n        console.error(\"There was a problem with the fetch operation:\", error);\n      }\n      ;\n      setTextTyped(\"\");\n    }\n    ;\n  }\n  ;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.divSearch,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `\n            ${styles.divBoth}\n            ${Night ? styles.divBothNight : \"\"}\n            `,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `\n                ${styles.divSearchIcon}\n                ${Night ? styles.divSearchIconNight : \"\"}\n                `,\n        children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faSearch\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.divSearchInput,\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          className: `\n                        ${styles.inputBox}\n                        ${Night ? styles.inputBoxNight : \"\"}\n                        `,\n          name: \"searchBarName\",\n          type: \"text\",\n          id: \"searchBar\",\n          mozactionhint: \"search\",\n          placeholder: \"Search by Artist, Song, or Album...\",\n          value: textTyped,\n          onChange: handleTextTyping,\n          onKeyDown: handleSubmit,\n          autoComplete: \"off\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `\n                ${styles.divSearchEnterIcon}\n                ${Night ? styles.divSearchEnterIconNight : \"\"}\n                `,\n        onClick: handleSubmit,\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: /*#__PURE__*/_jsxDEV(ArrowLogo, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 27\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.trackList,\n      children: dataSpotify && /*#__PURE__*/_jsxDEV(SearchResults, {\n        dataSpotify: dataSpotify,\n        searchBarMozilla: searchBarMozilla\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 37\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 9\n  }, this);\n}\n_s(SearchBar, \"WcjJpH5qqEx99wSsqSaEuvK8yFY=\", false, function () {\n  return [useNightMode];\n});\n_c = SearchBar;\n;\nexport default SearchBar;\nvar _c;\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"names":["React","useContext","useState","useEffect","styles","FontAwesomeIcon","faSearch","ReactComponent","ArrowLogo","TokenContext","SearchResults","useNightMode","jsxDEV","_jsxDEV","SearchBar","mozilla","_s","Night","accessToken","loading","textTyped","setTextTyped","dataSpotify","setDataSpotify","searchBarMozilla","setSearchBarMozilla","handleTextTyping","event","preventDefault","target","value","handleSubmit","trim","key","type","endpoint","q","market","limit","url","token","response","fetch","method","headers","ok","Error","data","json","error","console","className","divSearch","children","divBoth","divBothNight","divSearchIcon","divSearchIconNight","icon","fileName","_jsxFileName","lineNumber","columnNumber","divSearchInput","inputBox","inputBoxNight","name","id","mozactionhint","placeholder","onChange","onKeyDown","autoComplete","divSearchEnterIcon","divSearchEnterIconNight","onClick","trackList","_c","$RefreshReg$"],"sources":["/Users/jonathan/Desktop/Codecademy/jammming/src/components/SearchBar.js"],"sourcesContent":["import React, { useContext, useState, useEffect } from \"react\";\nimport styles from \"../modules/SearchBar.module.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSearch } from \"@fortawesome/free-solid-svg-icons\";\nimport { ReactComponent as ArrowLogo } from \"../resources/img/ArrowUDownLeft.svg\";\nimport { TokenContext } from \"./TokenProvider\";\nimport SearchResults from \"./SearchResults\";\nimport { useNightMode } from \"../App\";\n\nfunction SearchBar({mozilla}) {\n\n    const {Night} = useNightMode();\n\n    const { accessToken, loading } = useContext(TokenContext);\n\n    const [textTyped, setTextTyped] = useState(\"\");\n    const [dataSpotify, setDataSpotify] = useState(\"\");\n    const [searchBarMozilla, setSearchBarMozilla] = useState(mozilla);\n\n    useEffect(() => {\n        setSearchBarMozilla(mozilla);\n    }, [mozilla]);\n\n\n    const handleTextTyping = (event) => {\n        event.preventDefault();\n        setTextTyped(event.target.value);\n    }\n\n    async function handleSubmit(event) {\n\n        if (!textTyped.trim()) {\n            return;\n        }\n\n        if (event.key === \"Enter\" || event.type === \"click\") {\n            const endpoint = \"https://api.spotify.com/v1/search?\";\n            const q = \"q=remaster%2520artist%3A\" + textTyped;\n            const type = \"&type=album,track,artist\";\n            const market = \"&market=ES\";\n            const limit = \"&limit=50\";\n\n            const url = endpoint + q + type + market + limit;\n            const token = accessToken;\n\n            try {\n                const response = await fetch(url, {\n                    method: \"GET\",\n                    headers: {\n                        \"Authorization\": `Bearer ${token}`\n                    }\n                });\n\n                if (!response.ok) {\n                    throw new Error(\"HTTP error! status: ${response.status}\");\n                }\n\n                const data = await response.json();\n                setDataSpotify(data);\n\n            } catch (error) {\n                console.error(\"There was a problem with the fetch operation:\", error);\n            };\n\n            setTextTyped(\"\");\n        };\n    };\n\n    return (\n        <div className={styles.divSearch}>\n            <div className={`\n            ${styles.divBoth}\n            ${Night ? styles.divBothNight : \"\"}\n            `}>\n                <div className={`\n                ${styles.divSearchIcon}\n                ${Night ? styles.divSearchIconNight : \"\"}\n                `}>\n                    <FontAwesomeIcon icon={faSearch} />\n                </div>\n                <div className={styles.divSearchInput}>\n                    <input\n                        className={`\n                        ${styles.inputBox}\n                        ${Night ? styles.inputBoxNight : \"\"}\n                        `}\n                        name=\"searchBarName\"\n                        type=\"text\"\n                        id=\"searchBar\"\n                        mozactionhint=\"search\"\n                        placeholder=\"Search by Artist, Song, or Album...\"\n                        value={textTyped}\n                        onChange={handleTextTyping}\n                        onKeyDown={handleSubmit}\n                        autoComplete=\"off\"\n                    ></input>\n                </div>\n                <div className={`\n                ${styles.divSearchEnterIcon}\n                ${Night ? styles.divSearchEnterIconNight : \"\"}\n                `}\n                onClick={handleSubmit}\n                >\n                    <span><ArrowLogo /></span>\n                </div>\n            </div>\n            <div className={styles.trackList}>\n                    {dataSpotify && <SearchResults dataSpotify={dataSpotify} searchBarMozilla={searchBarMozilla} />}\n            </div>\n        </div>\n    );\n};\n\nexport default SearchBar;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}